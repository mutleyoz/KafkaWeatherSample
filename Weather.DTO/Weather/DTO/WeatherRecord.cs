// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.10.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Weather.DTO
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	/// <summary>
	/// A record of weather event related to a city
	/// </summary>
	public partial class WeatherRecord : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""WeatherRecord"",""namespace"":""Weather.DTO"",""fields"":[{""name"":""City"",""type"":{""type"":""enum"",""name"":""CityName"",""namespace"":""Weather.DTO"",""symbols"":[""Sydney"",""London"",""Brussels"",""Rio"",""Prague""]}},{""name"":""GmtOffset"",""type"":""int""},{""name"":""WeatherType"",""type"":{""type"":""enum"",""name"":""Weather"",""namespace"":""Weather.DTO"",""symbols"":[""Sunny"",""Cloudy"",""Fog"",""Rain"",""Lightning"",""Windy""]}},{""name"":""Temperature"",""type"":""int""},{""name"":""Humidity"",""type"":""int""},{""name"":""WindSpeed"",""type"":""int""}]}");
		private CityName _City;
		private int _GmtOffset;
		private Weather _WeatherType;
		private int _Temperature;
		private int _Humidity;
		private int _WindSpeed;
		public virtual Schema Schema
		{
			get
			{
				return WeatherRecord._SCHEMA;
			}
		}
		public CityName City
		{
			get
			{
				return this._City;
			}
			set
			{
				this._City = value;
			}
		}
		public int GmtOffset
		{
			get
			{
				return this._GmtOffset;
			}
			set
			{
				this._GmtOffset = value;
			}
		}
		public Weather WeatherType
		{
			get
			{
				return this._WeatherType;
			}
			set
			{
				this._WeatherType = value;
			}
		}
		public int Temperature
		{
			get
			{
				return this._Temperature;
			}
			set
			{
				this._Temperature = value;
			}
		}
		public int Humidity
		{
			get
			{
				return this._Humidity;
			}
			set
			{
				this._Humidity = value;
			}
		}
		public int WindSpeed
		{
			get
			{
				return this._WindSpeed;
			}
			set
			{
				this._WindSpeed = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.City;
			case 1: return this.GmtOffset;
			case 2: return this.WeatherType;
			case 3: return this.Temperature;
			case 4: return this.Humidity;
			case 5: return this.WindSpeed;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.City = (CityName)fieldValue; break;
			case 1: this.GmtOffset = (System.Int32)fieldValue; break;
			case 2: this.WeatherType = (Weather)fieldValue; break;
			case 3: this.Temperature = (System.Int32)fieldValue; break;
			case 4: this.Humidity = (System.Int32)fieldValue; break;
			case 5: this.WindSpeed = (System.Int32)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
