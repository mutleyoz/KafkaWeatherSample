// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.10.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Weather.DTO
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	/// <summary>
	/// A record of weather event related to a city
	/// </summary>
	public partial class WeatherRecord : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""WeatherRecord"",""namespace"":""Weather.DTO"",""fields"":[{""name"":""City"",""type"":{""type"":""enum"",""name"":""WeatherCities"",""namespace"":""Weather.DTO"",""symbols"":[""Sydney"",""Montreal"",""Zagreb"",""Chicago"",""London""]}},{""name"":""GmtOffset"",""type"":[""int"",""null""]},{""name"":""Type"",""type"":{""type"":""enum"",""name"":""WeatherTypes"",""namespace"":""Weather.DTO"",""symbols"":[""Rainy"",""Sunny"",""Snow"",""Mixed"",""Overcast""]}},{""name"":""Temperature"",""type"":[""int"",""null""]},{""name"":""Humidity"",""type"":[""int"",""null""]},{""name"":""WindSpeed"",""type"":[""int"",""null""]}]}");
		private Weather.DTO.WeatherCities _City;
		private System.Nullable<System.Int32> _GmtOffset;
		private Weather.DTO.WeatherTypes _Type;
		private System.Nullable<System.Int32> _Temperature;
		private System.Nullable<System.Int32> _Humidity;
		private System.Nullable<System.Int32> _WindSpeed;
		public virtual Schema Schema
		{
			get
			{
				return WeatherRecord._SCHEMA;
			}
		}
		public Weather.DTO.WeatherCities City
		{
			get
			{
				return this._City;
			}
			set
			{
				this._City = value;
			}
		}
		public System.Nullable<System.Int32> GmtOffset
		{
			get
			{
				return this._GmtOffset;
			}
			set
			{
				this._GmtOffset = value;
			}
		}
		public Weather.DTO.WeatherTypes Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				this._Type = value;
			}
		}
		public System.Nullable<System.Int32> Temperature
		{
			get
			{
				return this._Temperature;
			}
			set
			{
				this._Temperature = value;
			}
		}
		public System.Nullable<System.Int32> Humidity
		{
			get
			{
				return this._Humidity;
			}
			set
			{
				this._Humidity = value;
			}
		}
		public System.Nullable<System.Int32> WindSpeed
		{
			get
			{
				return this._WindSpeed;
			}
			set
			{
				this._WindSpeed = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.City;
			case 1: return this.GmtOffset;
			case 2: return this.Type;
			case 3: return this.Temperature;
			case 4: return this.Humidity;
			case 5: return this.WindSpeed;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.City = (Weather.DTO.WeatherCities)fieldValue; break;
			case 1: this.GmtOffset = (System.Nullable<System.Int32>)fieldValue; break;
			case 2: this.Type = (Weather.DTO.WeatherTypes)fieldValue; break;
			case 3: this.Temperature = (System.Nullable<System.Int32>)fieldValue; break;
			case 4: this.Humidity = (System.Nullable<System.Int32>)fieldValue; break;
			case 5: this.WindSpeed = (System.Nullable<System.Int32>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
